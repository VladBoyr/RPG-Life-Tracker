# Generated by Django 5.2.5 on 2025-08-30 21:36

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('level', models.IntegerField(default=1)),
                ('current_xp', models.IntegerField(default=0)),
                ('xp_to_next_level', models.IntegerField(default=100)),
                ('pity_counter', models.IntegerField(default=0)),
                ('last_lootbox_date', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='character', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LootItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rarity', models.CharField(choices=[('COMMON', 'Обычный'), ('UNCOMMON', 'Необычный'), ('RARE', 'Редкий'), ('UNIQUE', 'Уникальный'), ('LEGENDARY', 'Легендарный')], default='COMMON', max_length=10)),
                ('base_chance', models.DecimalField(decimal_places=2, max_digits=5)),
                ('received_date', models.DateTimeField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loot_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReceivedReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('source_name', models.CharField(max_length=100)),
                ('received_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('rarity', models.CharField(blank=True, choices=[('COMMON', 'Обычный'), ('UNCOMMON', 'Необычный'), ('RARE', 'Редкий'), ('UNIQUE', 'Уникальный'), ('LEGENDARY', 'Легендарный')], max_length=10, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_rewards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-received_date'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('unit_description', models.CharField(default='ед. прогресса', max_length=100)),
                ('xp_per_unit', models.IntegerField(default=10)),
                ('level', models.IntegerField(default=1)),
                ('current_xp', models.IntegerField(default=0)),
                ('xp_to_next_level', models.IntegerField(default=100)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='api.character')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='api.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('goal_type', models.CharField(choices=[('DAILY', 'Дейлик'), ('YELLOW', 'Среднесрочная'), ('RED', 'Долгосрочная')], default='DAILY', max_length=10)),
                ('xp_reward', models.IntegerField(default=25)),
                ('completed', models.BooleanField(default=False)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='api.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_level', models.IntegerField()),
                ('description', models.CharField(max_length=255)),
                ('claimed_date', models.DateTimeField(blank=True, null=True)),
                ('owner_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='api.character')),
                ('owner_skill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='api.skill')),
            ],
        ),
    ]
