# Generated by Django 5.2.5 on 2025-09-24 19:19

from django.db import migrations

def forwards_func(apps, schema_editor):
    Goal = apps.get_model('api', 'Goal')
    GoalCompletion = apps.get_model('api', 'GoalCompletion')
    User = apps.get_model('auth', 'User')
    completed_goals = Goal.objects.filter(completed=True, completion_date__isnull=False)
    
    completions_to_create = []
    for goal in completed_goals:
        try:
            owner = goal.skill.character.user
            completions_to_create.append(
                GoalCompletion(
                    goal=goal,
                    owner=owner,
                    completion_date=goal.completion_date
                )
            )
        except (User.DoesNotExist, AttributeError):
            continue
    
    GoalCompletion.objects.bulk_create(completions_to_create, ignore_conflicts=True)

def reverse_func(apps, schema_editor):
    GoalCompletion = apps.get_model('api', 'GoalCompletion')
    GoalCompletion.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0004_goalcompletion'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
